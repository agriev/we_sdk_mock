# Generated by Django 2.2 on 2023-05-26 06:53

from django.core.paginator import Paginator
from django.db import migrations

from apps.payments.utils import Constants

PAGE_SIZE = 2000


def update_events_data(apps, schema_editor):
    Payment = apps.get_model('payments', 'Payment') # noqa
    Payment.__bases__ = (Payment.__bases__[1],)
    PaymentEvent = apps.get_model('payments', 'PaymentEvent') # noqa
    queryset = PaymentEvent.objects.filter(_event_type=Constants.PENDING).select_related('payment')
    paginator = Paginator(queryset, PAGE_SIZE)

    for page_number in paginator.page_range:
        changed = []
        for event in paginator.page(page_number):
            event.data.update(payment_system_name=event.payment.payment_system_name)
            changed.append(event)
        batch_size = 999 if schema_editor.connection.vendor == 'sqlite' else None
        PaymentEvent.objects.bulk_update(changed, fields=['data'], batch_size=batch_size)


class Migration(migrations.Migration):
    dependencies = [
        ('payments', '0006_convert_xsollaproject_to_paymentproject'),
    ]

    operations = [
        migrations.RunPython(update_events_data, migrations.RunPython.noop)
    ]
