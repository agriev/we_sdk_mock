# Generated by Django 2.2 on 2023-04-24 12:24

from django.db import connection, migrations, models

from apps.payments.utils import Constants


def convert_xsolla_transactions(apps, schema_editor):
    XsollaTransaction = apps.get_model('payments', 'XsollaTransaction')
    Payment = apps.get_model('payments', 'Payment')
    PaymentEvent = apps.get_model('payments', 'PaymentEvent')
    CreatedEvent = apps.get_model('payments', 'CreatedEvent')
    PendingEvent = apps.get_model('payments', 'PendingEvent')
    PaidEvent = apps.get_model('payments', 'PaidEvent')
    Payment.__bases__ = (Payment.__bases__[1],)

    with connection.cursor() as cursor:
        cursor.execute(
            f"SELECT setval('{Payment._meta.db_table}_{Payment._meta.pk.name}_seq', "
            f"(SELECT MAX(transaction_id) FROM {XsollaTransaction._meta.db_table}) + 42);"
        )

    for xsolla_transaction in XsollaTransaction.objects.all():
        payment = Payment.objects.create(
            current_state=Constants.PAID,
            game_id=xsolla_transaction.project.game_id,
            player_id=xsolla_transaction.player_id,
            game_session=xsolla_transaction.game_session,
            created=xsolla_transaction.created
        )
        created_event = CreatedEvent(
            _event_type=Constants.CREATED,
            payment=payment,
            data={
                'game_id': payment.game_id,
                'purchase': xsolla_transaction.data['purchase']['total'],
                'player_id': xsolla_transaction.player_id,
                'project_id': xsolla_transaction.project_id,
                'game_session_id': xsolla_transaction.game_session_id,
                'custom_parameters': xsolla_transaction.data.get('custom_parameters', {})
            },
            created=xsolla_transaction.created
        )
        pending_event = PendingEvent(
            _event_type=Constants.PENDING, payment=payment, created=xsolla_transaction.created, data={}
        )
        paid_event = PaidEvent(
            _event_type=Constants.PAID,
            payment=payment,
            created=xsolla_transaction.created,
            data=xsolla_transaction.data
        )

        PaymentEvent.objects.bulk_create([created_event, pending_event, paid_event])
        paid_event.refresh_from_db()

        Payment.objects.filter(id=payment.id) \
            .update(current_state=Constants.PAID, last_success_event=paid_event, payment_system_name='xsolla')


class Migration(migrations.Migration):

    dependencies = [
        ('payments', '0004_index_on_paymentevent_data_id'),
    ]

    operations = [
        migrations.RunPython(convert_xsolla_transactions),
        migrations.AlterField(model_name='payment', name='created', field=models.DateTimeField(auto_now_add=True)),
        migrations.AlterField(model_name='paymentevent', name='created', field=models.DateTimeField(auto_now_add=True)),
    ]
