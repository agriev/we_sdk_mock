version: 2

jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:curl

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Login on Docker Hub
          command: bash .circleci/docker-login.sh
      - run:
          name: Check if there are newer base images on Docker Hub
          command: bash .circleci/docker-caching-key.sh
      - restore_cache:
          keys:
            - v1-docker-layers-{{ checksum "docker-caching-key.txt" }}
            - v1-docker-layers-{{ checksum "docker-caching-key.txt" }}-{{ checksum "package.json" }}
      - run:
          name: Load Docker layer cache
          command: bash .circleci/docker-load-cache.sh
      - run:
          name: Building & pushing docker image
          command: bash .circleci/docker-build.sh
      - run:
          name: Save Docker layer cache
          command: bash .circleci/docker-save-cache.sh
      - save_cache:
          key: v1-docker-layers-{{ checksum "docker-caching-key.txt" }}
          paths:
            - /tmp/docker-caches
      - save_cache:
          key: v1-docker-layers-{{ checksum "docker-caching-key.txt" }}-{{ checksum "package.json" }}
          paths:
            - /tmp/docker-caches
  test:
    docker:
      - image: $DOCKERHUB_USERNAME/rawg-node:$CIRCLE_BRANCH
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: /app/

    steps:
      - run:
          name: Tests
          command: |
            node -v
      - run:
          name: Clean
          command: IMAGE=rawg-node bash /app/.circleci/docker-delete-tag.sh

workflows:
  version: 2

  build-test:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - test:
          requires:
            - build
